# Environment
dist: bionic
language: java

# Pre-download all maven dependencies
install: ./mvnw -q -e dependency:go-offline

# Setup the artifact signing key; it will be used to publish snapshots and releases
before_script:
  - openssl aes-256-cbc -K $encrypted_59cd562a81f9_key -iv $encrypted_59cd562a81f9_iv
    -in .mvn/artifact-signing-key.asc.enc -out .mvn/artifact-signing-key.asc -d
  - gpg2 --batch --no-default-keyring --allow-secret-key-import --import .mvn/artifact-signing-key.asc

# Deploy snapshot artifacts to OSSRH
script: ./mvnw -q -e deploy -settings .mvn/settings.xml -P ossrh

# Set up git user name and tag this commit
before_deploy:
  - openssl aes-256-cbc -K $encrypted_59cd562a81f9_key -iv $encrypted_59cd562a81f9_iv
    -in deploy/id_rsa.enc -out ~/.ssh/id_rsa -d
  - git config --local user.name "Travis CI"
  - git config --local user.email "travis@travis-ci.com"

# Deploy release build
deploy:
  # Set the version
  - on:
      tags: true
    provider: script
    script: ./mvnw -e versions:set -DnewVersion=${TRAVIS_TAG} -DgenerateBackupPoms=false
  # Clean and deploy the release artifacts to OSSRH
  - on:
      tags: true
    provider: script
    script: ./mvnw -q -e clean deploy -settings .mvn/settings.xml -P ossrh
  # Set the next snapshot version
  - on:
      tags: true
    provider: script
    script: ./mvnw -e release:update-versions -B
  # Push changes to git
  - on:
      tags: true
    provider: script
    script: deploy/commit-release.sh